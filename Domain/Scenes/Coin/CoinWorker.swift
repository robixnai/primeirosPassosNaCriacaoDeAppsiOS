//
//  CoinWorker.swift
//  MarketCoins
//
//  Created by Robson Moreira on 07/11/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class CoinWorker {
    
    private let dataProvider: CurrentDataDataProvider?
    private var completion: ((Result<CurrentDataModel?, KarketCoinsError>) -> Void)?
    
    init(dataProvider: CurrentDataDataProvider = CurrentDataDataProvider()) {
        self.dataProvider = dataProvider
        self.dataProvider?.delegate = self
    }
    
    func doFetchCurrentData(id: String, completion: @escaping ((Result<CurrentDataModel?, KarketCoinsError>) -> Void)) {
        dataProvider?.fetchCoin(by: id)
        self.completion = completion
    }
}

extension CoinWorker: CurrentDataDataProviderDelegate {
    
    func success(model: Any) {
        guard let completion = completion else {
            fatalError("Completion not implemented!")
        }
        completion(.success(model as? CurrentDataModel))
    }
    
    func errorData(_ provider: GenericDataProviderDelegate?, error: Error) {
        guard let completion = completion else {
            fatalError("Completion not implemented!")
        }
        
        if error.errorCode == 500 {
            completion(.failure(.internalServerError))
        } else if error.errorCode == 400 {
            completion(.failure(.badRequestError))
        } else if error.errorCode == 404 {
            completion(.failure(.notFoundError))
        } else {
            completion(.failure(.undefinedError))
        }
    }
}
